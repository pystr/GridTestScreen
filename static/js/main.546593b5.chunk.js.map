{"version":3,"sources":["ShowcaseLayout.js","index.js"],"names":["ResponsiveReactGridLayout","WidthProvider","Responsive","ShowcaseLayout","_React$Component","Object","inherits","_super","_createSuper","props","_this","classCallCheck","this","call","state","currentBreakpoint","compactType","mounted","layouts","lg","initialLayout","onBreakpointChange","bind","assertThisInitialized","onCompactTypeChange","onLayoutChange","onNewLayout","createClass","key","value","setState","_","map","l","i","react_default","a","createElement","className","static","title","breakpoint","oldCompactType","layout","generateLayout","style","marginBottom","capitalize","fontSize","width","height","marginLeft","onClick","assign","measureBeforeMount","useCSSTransforms","preventCollision","generateDOM","React","Component","range","item","y","Math","ceil","random","x","floor","w","h","toString","defaultProps","rowHeight","cols","md","sm","xs","xxs","ExampleLayout","src_createSuper","ShowcaseLayout_ShowcaseLayout","contentDiv","document","getElementById","gridProps","window","ReactDOM","render"],"mappings":"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","file":"static/js/main.546593b5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nexport default class ShowcaseLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false,\n      layouts: { lg: props.initialLayout }\n    };\n\n    this.onBreakpointChange = this.onBreakpointChange.bind(this);\n    this.onCompactTypeChange = this.onCompactTypeChange.bind(this);\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n    this.onNewLayout = this.onNewLayout.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  generateDOM() {\n    return _.map(this.state.layouts.lg, function (l, i) {\n      return (\n        <div key={i} className={l.static ? \"static\" : \"\"}>\n          {l.static ? (\n            <span className=\"text\" title=\"Sabit Alan\">\n              Sabit Alan - {i}\n            </span>\n          ) : (\n            <span className=\"text\">{i}</span>\n          )}\n        </div>\n      );\n    });\n  }\n\n  onBreakpointChange(breakpoint) {\n    this.setState({\n      currentBreakpoint: breakpoint\n    });\n  }\n\n  onCompactTypeChange() {\n    const { compactType: oldCompactType } = this.state;\n    const compactType =\n      oldCompactType === \"horizontal\"\n        ? \"vertical\"\n        : oldCompactType === \"vertical\"\n        ? null\n        : \"horizontal\";\n    this.setState({ compactType });\n  }\n\n  onLayoutChange(layout, layouts) {\n    this.props.onLayoutChange(layout, layouts);\n  }\n\n  onNewLayout() {\n    this.setState({\n      layouts: { lg: generateLayout() }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <div>\n          Current Breakpoint: {this.state.currentBreakpoint} ({\n            this.props.cols[this.state.currentBreakpoint]\n          }{\" \"}\n          columns)\n        </div> */}\n        <div style={{ marginBottom: \"40px\" }}>\n          Hizlayim Gayre:{\" \"}\n          {_.capitalize(this.state.compactType) || \"Serbest Mod\"}\n        </div>\n        {/* <button style={{\"marginBottom\":\"15px\"}} onClick={this.onNewLayout}>Generate New Layout</button> */}\n        <button\n          style={{\n            fontSize: \"18px\",\n            width: \"100%\",\n            height: \"100px\",\n            marginBottom: \"15px\",\n            marginLeft: \"15px\"\n          }}\n          onClick={this.onCompactTypeChange}\n        >\n          Hizala Bakem\n        </button>\n        <ResponsiveReactGridLayout\n          {...this.props}\n          layouts={this.state.layouts}\n          onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={this.onLayoutChange}\n          // WidthProvider option\n          measureBeforeMount={false}\n          // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n          // and set `measureBeforeMount={true}`.\n          useCSSTransforms={this.state.mounted}\n          compactType={this.state.compactType}\n          preventCollision={!this.state.compactType}\n        >\n          {this.generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n  }\n}\n\nShowcaseLayout.propTypes = {\n  onLayoutChange: PropTypes.func.isRequired\n};\n\nShowcaseLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function () {},\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  initialLayout: generateLayout()\n};\n\nfunction generateLayout() {\n  return _.map(_.range(0, 25), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: (_.random(0, 5) * 2) % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      static: Math.random() < 0.05\n    };\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ShowcaseLayout from \"./ShowcaseLayout\";\n\nclass ExampleLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { layout: [] };\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n  }\n\n  onLayoutChange(layout) {\n    this.setState({ layout: layout });\n  }\n\n  stringifyLayout() {\n    return this.state.layout.map(function (l) {\n      return (\n        <div className=\"layoutItem\" key={l.i}>\n          <b>{l.i}</b>: [{l.x}, {l.y}, {l.w}, {l.h}]\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <div className=\"layoutJSON\">\n          Displayed as <code>[x, y, w, h]</code>:\n          <div className=\"columns\">{this.stringifyLayout()}</div>\n        </div> */}\n        <ShowcaseLayout onLayoutChange={this.onLayoutChange} />\n      </div>\n    );\n  }\n}\n\nconst contentDiv = document.getElementById(\"root\");\nconst gridProps = window.gridProps || {};\nReactDOM.render(React.createElement(ExampleLayout, gridProps), contentDiv);\n"],"sourceRoot":""}